#compdef rust-nix-shell

autoload -U is-at-least

_rust-nix-shell() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'--shell=[The shell to open. Passed to '\''nix-shell --command'\'']:SHELL: ' \
'*-p+[Extra packages to insert in the shell, as if passed to '\''nix-shell -p'\'']:PACKAGES: ' \
'*--packages=[Extra packages to insert in the shell, as if passed to '\''nix-shell -p'\'']:PACKAGES: ' \
'--name=[The name for the shell]:NAME: ' \
'-h[Print help information]' \
'--help[Print help information]' \
'--pure[Use a pure nix shell. Overrides '\''--shell'\'']' \
'--verbose[Output debug information]' \
'--fresh-fenix[Force the use of a fresh fenix]' \
'::channel -- The rust release channel to pull. Possible values\: \["stable", "beta", "nightly", "nightly-YYYY-mm-dd", "1.x.y"\]:' \
&& ret=0
}

(( $+functions[_rust-nix-shell_commands] )) ||
_rust-nix-shell_commands() {
    local commands; commands=()
    _describe -t commands 'rust-nix-shell commands' commands "$@"
}

_rust-nix-shell "$@"
